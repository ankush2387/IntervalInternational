# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.39.1"

default_platform :ios
desc "Updates the provisioning profile on computer"
lane :certs do
cert
sigh(force: true)
end

desc "Builds development target and uploads to HockeyApp"
lane :development do

# Run Unit Tests
scan(scheme: "IntervalApp", output_types: "junit")

# Increment project build number
increment_build_number(xcodeproj: "/Users/aolivas/interval-app-ios/IntervalApp.xcodeproj")
buildNumber = get_build_number

# Package IPA with release configurations
gym(workspace: "IntervalApp.xcworkspace",
configuration: "Release",
scheme: "IntervalApp",
silent: true,
clean: true,
output_directory: "/Users/aolivas/exchange-ios-ipaholder",
output_name: "build-" + buildNumber + ".ipa",
export_method: "development"
)

# Commit build number bump
commit_version_bump(force: true, message: "Auto-increment build version: " + buildNumber)

# Push to remote/origin the version bump commit
push_to_git_remote(remote: "origin", local_branch: "HEAD", remote_branch: "develop", force: true, tags: true)
end

desc "Builds development target and uploads to HockeyApp"
lane :development_manual do

# Increment project build number
increment_build_number(xcodeproj: "/Users/aolivas/interval-app-ios/IntervalApp.xcodeproj")
buildNumber = get_build_number

# Commit build number bump
commit_version_bump(force: true, message: "Auto-increment build version: " + buildNumber)

# Push to remote/origin the version bump commit
push_to_git_remote()

# Run Unit Tests
scan(scheme: "IntervalApp")

# Package IPA with release configurations
gym(workspace: "IntervalApp.xcworkspace",
configuration: "Release",
scheme: "IntervalApp",
silent: true,
clean: true,
export_method: "development"
)

# Upload newly created IPA to HockeyApp
hockey(api_token: "98ee87f6ff104da086210a5ff4597b44",
public_identifier: "bde61378ac204256b1e52748bd34f688",
notes: "Changelog",
notify: '0',
notes: "Develop Build (Uploaded via fastlane)."
)

end

platform :ios do
before_all do
cocoapods
end

desc "Runs all the tests"
lane :test do
scan(scheme: "IntervalApp", output_types: "junit")
end
end

