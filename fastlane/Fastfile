# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.39.1"

default_platform :ios

desc "Builds development target and uploads to HockeyApp"
lane :development do
increment_build_number(xcodeproj: "/Users/aolivas/interval-app-ios/IntervalApp.xcodeproj")
scan(scheme: "IntervalApp")
gym(
workspace: "IntervalApp.xcworkspace",
configuration: "Release",
scheme: "IntervalApp",
silent: true,
clean: true,
export_method: "development"
)

if ENV['BUILDKITE_BRANCH'].nil? || ENV['BUILDKITE_BRANCH'].empty?
branch_name = git_branch
else
branch_name = ENV['BUILDKITE_BRANCH']
end

hockey(
api_token: "98ee87f6ff104da086210a5ff4597b44",
public_identifier: "bde61378ac204256b1e52748bd34f688",
notes: "Changelog",
notify: '0',
notes:git_branch + ' (Uploaded via fastlane).'
)
end

platform :ios do
before_all do
# ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
cocoapods

end

desc "Runs all the tests"
lane :test do
scan(scheme: "IntervalApp")
end

desc "Submit a new Beta Build to Apple TestFlight"
desc "This will also make sure the profile is up to date"
lane :beta do
# match(type: "appstore") # more information: https://codesigning.guide
gym(scheme: "BookMeScheduler") # Build your app - more options available
pilot

# sh "your_script.sh"
# You can also use other beta testing services here (run `fastlane actions`)
end

desc "Deploy a new version to the App Store"
lane :release do
# match(type: "appstore")
# snapshot
gym(scheme: "IntervalApp") # Build your app - more options available
deliver(force: true)
# frameit
end

# You can define as many lanes as you want

after_all do |lane|
# This block is called, only if the executed lane was successful

# slack(
#   message: "Successfully deployed new App Update."
# )
end

error do |lane, exception|
# slack(
#   message: exception.message,
#   success: false
# )
end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
